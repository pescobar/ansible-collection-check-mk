---

- name: Install check_mk_agent | RedHat
  ansible.builtin.yum:
    name: "{{ check_mk_agent_package_url | default('check-mk-agent') }}"
    state: present
  when: ansible_os_family == 'RedHat'

- name: Install check_mk_agent | Debian
  ansible.builtin.apt:
    name: "{{ check_mk_agent_package_url | default('check-mk-agent') }}"
    state: present
  when: ansible_os_family == 'Debian'

- name: Install plugin requirements
  ansible.builtin.package:
    name: "{{ check_mk_agent_plugins_requirements }}"
    state: present

- name: Create plugins repository
  ansible.builtin.file:
    path: /usr/lib/check_mk_agent/plugins/
    owner: root
    group: root
    state: directory

- name: Copy plugins
  ansible.builtin.copy:
    src: plugins/{{ item }}
    dest: /usr/lib/check_mk_agent/plugins/{{ item }}
    owner: root
    group: root
    mode: 0755
  with_items: "{{ check_mk_agent_plugins }}"

- name: Create cache time directories
  ansible.builtin.file:
    name: /usr/lib/check_mk_agent/local/{{ item.value.cache_time }}
    state: directory
    owner: root
    group: root
    mode: 0755
  with_dict: "{{ check_mk_agent_local_checks }}"

- name: Copy local checks
  ansible.builtin.copy:
    src: "{{ item.value.src }}"
    dest: /usr/lib/check_mk_agent/local/{{ item.value.cache_time | default(omit) }}/{{ item.key }}
    owner: root
    group: root
    mode: 0755
  with_dict: "{{ check_mk_agent_local_checks }}"

- name: Start and enable check_mk.socket (use systemd-socket)
  ansible.builtin.systemd:
    name: check_mk.socket
    daemon_reload: true
    state: started
    enabled: true
  when:
    - not check_mk_agent_over_ssh
    - not check_mk_agent_over_xinetd

- name: xinetd service activation
  block:

    - name: Install xinetd package
      ansible.builtin.package:
        name: xinetd
        state: present

    - name: Start and enable xinetd
      ansible.builtin.service:
        name: xinetd
        state: started
        enabled: true

  when:
    - not check_mk_agent_over_ssh
    - check_mk_agent_over_xinetd

- name: Setup SSH key
  ansible.posix.authorized_key:
    user: root
    key_options: 'command="/usr/bin/check_mk_agent",no-pty,no-agent-forwarding,no-port-forwarding,no-X11-forwarding,no-user-rc'
    key: "{{ check_mk_agent_ssh_pubkey }}"
  when:
    - check_mk_agent_over_ssh
    - check_mk_agent_ssh_pubkey | length > 0
    - not check_mk_agent_with_sudo

- name: check_mk_agent with sudo
  block:

    - name: Add check_mk user for use with sudo
      ansible.builtin.user:
        name: checkmk_agent
        system: true
        # set fixed uid
        home: /usr/lib/check_mk_agent/local
        createhome: false
        state: present

    - name: Allow checkmk_agent user to run /usr/bin/check_mk_agent with sudo
      ansible.builtin.copy:
        src: sudoers_check_mk_agent
        dest: /etc/sudoers.d/check_mk_agent

    - name: Setup SSH key with sudo
      ansible.posix.authorized_key:
        user: checkmk_agent
        key_options: 'command="sudo /usr/bin/check_mk_agent",no-pty,no-agent-forwarding,no-port-forwarding,no-X11-forwarding,no-user-rc'
        key: "{{ check_mk_agent_ssh_pubkey }}"

  when:
    - check_mk_agent_over_ssh
    - check_mk_agent_ssh_pubkey | length > 0
    - check_mk_agent_with_sudo

- name: Add host to check_mk instance via WATO API
  pescobar.check_mk.host:
    base_url: "{{ check_mk_agent_monitoring_host_url }}"
    username: "{{ check_mk_agent_monitoring_host_wato_username }}"
    password: "{{ check_mk_agent_monitoring_host_wato_secret }}"
    hostname: "{{ check_mk_agent_hostname_to_register | default(inventory_hostname) }}"
    folder: "{{ check_mk_agent_monitoring_host_folder }}"
    #host_ip: "{{ ansible_host | default(omit) }}"
    #validate_certs: "{{ check_mk_agent_validate_api_ssl_certs }}"  # not used by now. we don't validate certs by default
    state: present
  when: check_mk_agent_add_to_wato
  register: check_mk_agent_add_host_wato
  delegate_to: localhost
  become: false
  tags:
    - skip_ansible_lint

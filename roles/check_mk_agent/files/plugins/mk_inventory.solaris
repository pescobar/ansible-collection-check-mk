#!/bin/bash
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Run and *send* only once every __ seconds
. $MK_CONFDIR/mk_inventory.cfg 2>/dev/null || true

# Default to four hours
INTERVAL=${INVENTORY_INTERVAL:-14400}

FLAGFILE=$MK_VARDIR/mk_inventory.last.$REMOTE
if [ `uname -r` = "5.10" ]; then
    NOW=$(truss /usr/bin/date 2>&1 | grep ^time | awk -F"= " '{print $2}')
else
    NOW=`date +%s`
fi
UNTIL=$((NOW + INTERVAL + 600))

#check if flagfile exits
if [ -e "$FLAGFILE" ]; then
    LAST_RUN=$(cat $FLAGFILE)
else
    #First run of the script
    LAST_RUN=0
fi

if [ $(( NOW - LAST_RUN )) -ge $INTERVAL ]
then
    echo $NOW > $FLAGFILE

    echo "<<<solaris_uname:sep(61):persist($UNTIL)>>>"
    uname -X

    if zoneadm list | grep global >/dev/null 2>&1
    then
        if type prtdiag > /dev/null; then
            echo "<<<solaris_prtdiag:sep(10):persist($UNTIL)>>>"
            if type sneep >/dev/null 2>&1; then
                SN=$(sneep -t serial)
            else
                SN=$(smbios -t SMB_TYPE_SYSTEM | grep 'Serial Number:' | awk '{print substr($0, index($0,$3))}')
            fi
            echo "SerialNumber: $SN"
            prtdiag -v
        fi

        if type prtpicl > /dev/null; then
            echo "<<<solaris_prtpicl:persist($UNTIL)>>>"
            prtpicl -v
        fi
    fi

    if type psrinfo > /dev/null; then
        echo "<<<solaris_psrinfo:persist($UNTIL)>>>"
        psrinfo -p -v
    fi

    if type pkginfo >/dev/null ; then
        echo "<<<solaris_pkginfo:sep(58):persist($UNTIL)>>>"
        pkginfo -l
    fi

    echo "<<<solaris_addresses:persist($UNTIL)>>>"
    ifconfig -a

    echo "<<<solaris_routes:persist($UNTIL)>>>"
    netstat -nr

fi

